from tkinter import *
import random
from tkinter import messagebox
import sys
from PIL import Image, ImageTk

class card:
    def __init__(self):
        self.mark = ['Spade', 'Club', 'Diamond', 'Heart']
        self.cardnum = ['2', '3', '4', '5', '6', '7', '8',
                                '9', '10', '11', '12', '13', '14']
        self.deck = []
        self.makedeck()
        self.shuffle()


    def makedeck(self):
        for i in self.mark:
            for j in self.cardnum:
                self.deck.append([i, j])

    def shuffle(self):
        random.shuffle(self.deck)

    def restarts(self):
        self.hand.clear()



class user():
    def __init__(self,name,deck):
        self.hand = []
        self.deck = deck
        self.name=name
        self.dealing()
        self.showcard()

    def restart(self):
        self.hand.clear()

    def showcard(self):
        print(f"{self.name}의 카드는{self.hand}")
    def dealing(self):
        for i in range(4):
            self.hand.append(self.deck.pop())

count=0



def cardmake():
    global deck#2번째실행
    deck=card()
    print("카드덱 생성완료!")
def gstart():  #1번째실행
    start.withdraw()
    started.deiconify()
    cardmake()

def usermake(): #3번째실행
    global user1
    global count
    name="유저(1)"
    user1=user(name,deck.deck)
    shoot()
    count+=1
    if count > 9:
        startre()
        messagebox.showinfo("경고", "OUT OF CARD DECK!.")
        count=0
def usermake2():
    global user2
    global count
    name = "유저(2)"
    user2 = user(name,deck.deck)
    shoot1()
    count+=1
    if count > 9:
        startre()
        messagebox.showinfo("경고", "OUT OF CARD DECK!.")
        count=0

def endshow():
    print(f"1번 유저의패:{determine(user1.hand)}")
    print(f"2번 유저의패:{determine(user2.hand)}")

def straight(hand):
    hande = []
    for i in range(0, 4):
        number = hand[i][1]
        hande.append(int(number))
    hande.sort()
    if hande[0] + 1 == hande[1] and hande[1] + 1 == hande[2] and hande[2] + 1 == hande[3] and len(set(hande)) == 4:
        return True
    else:
        return False
def compare(number):
    combi = {'four of a kind': 1, 'full house': 2, 'flush': 3, 'straight': 4,
             'three of a kind': 5, 'two pair': 6, 'one pair': 7, 'high card': 8}
    return combi[number]

def determine(user):
    combi={'four of a kind':1,'straight flush':2,'flush':3,'straight':4,
                 'three of a kind':5,'two pair':6,'one pair':7,'high card':8}

    counting={}

    for item in user:
        key = item[0]
        value = item[1]
        if key in counting:
            counting[key].append(value)
        else:
            counting[key] = [value]

    for _, num in user:
        if num in counting:
            counting[num] += 1
        else:
            counting[num] = 1

    if user[0][1]==user[1][1]== user[2][1] ==user[3][1]:
        return 'four of a kind'
    elif user[0][0] == user[1][0] == user[2][0] ==user[3][0] and straight(user):
        return 'straight flush'
    elif user[0][0] == user[1][0] == user[2][0] ==user[3][0]:
        return 'flush'
    elif straight(user):
        return 'straight'
    elif 3 in counting.values():
        return 'three of a kind'
    elif list(counting.values()).count(2) == 2:
        return "two pair"
    elif 2 in counting.values():
        return "one pair"
    else:
        return "high card"

def final():
    if compare(determine(user1.hand))==compare(determine(user2.hand)):
        total1=0; total2=0
        for suit, value in user1.hand:
            if value.isdigit():
                total1 += int(value)
        for suit, value in user2.hand:
            if value.isdigit():
                total2 += int(value)
        if total1>total2:
            print("1번유저의 승리")
            canvas.create_image(150, 50, anchor=NW, image=win, tags="winner")
        else:
            print("2번유저의 승리")
            canvas.create_image(150, 250, anchor=NW, image=win, tags="winner")
    elif compare(determine(user1.hand))< compare(determine(user2.hand)):
        print("1번유저의 승리")
        canvas.create_image(150, 50, anchor=NW, image=win, tags="winner")
    else:
        print("2번유저의 승리")
        canvas.create_image(150, 250, anchor=NW, image=win, tags="winner")
def finalshow():
    final()
    endshow()
def print_text(texter):
    class printer:
        def __init__(self, text):
            self.text= text
        def write(self, str):
            self.text.insert(END,str)
        def flush(self):
            pass
    sys.stdout= printer(texter)


def endgame():
    started.destroy()
    start.destroy()
def startre():
    """
    #cbtn.pack_forget()
    #entry.pack_forget()
    ubtn.pack_forget()
    ubtn2.pack_forget()
    fight.pack_forget()
    tryagain.pack_forget()
    user_text.pack_forget()
    #result.pack_forget()


    #cbtn.pack()
    ubtn.pack()
    ubtn2.pack()
    fight.pack()
    tryagain.pack()
    user_text.pack()
    #result.pack()
    #entry.pack()
    """
    clear_text()
    started.withdraw()
    start.deiconify()

def clear_text():
    user_text.delete('1.0',END)
    user1.restart()
    user2.restart()
    canvas.delete("winner")
    canvas.delete("cards")





start=Tk()
start.geometry("1024x760")
start.title("Poker Game")
start.option_add("*Font","맑은고딕 17")

start_canvas=Canvas(start, width=1400,height=760)
start_canvas.pack()
back_image = PhotoImage(file=r"C:\Users\spuma\PycharmProjects\pythonProject\pokerbg.gif")
start_canvas.create_image(0,0, anchor=NW, image=back_image)



started=Toplevel()
started.geometry("1024x560")
started.title("Poker Game")
started.option_add("*Font","맑은고딕 17")

started.withdraw()

canvas=Canvas(started, width=1500,height=1000)
canvas.pack()
image = Image.open(r"C:\Users\spuma\PycharmProjects\pythonProject\pokerplay.gif")


play_image = ImageTk.PhotoImage(image)
canvas.create_image(0,0,anchor=NW, image=play_image,tags="background")



#카드 이미지로드
#클로버
c2=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c2.gif")
c3=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c3.gif")
c4=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c4.gif")
c5=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c5.gif")
c6=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c6.gif")
c7=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c7.gif")
c8=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c8.gif")
c9=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c9.gif")
c10=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c10.gif")
c11=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c11.gif")
c12=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c12.gif")
c13=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c13.gif")
c14=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\c14.gif")
#스페이드
s2=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s2.gif")
s3=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s3.gif")
s4=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s4.gif")
s5=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s5.gif")
s6=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s6.gif")
s7=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s7.gif")
s8=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s8.gif")
s9=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s9.gif")
s10=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s10.gif")
s11=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s11.gif")
s12=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s12.gif")
s13=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s13.gif")
s14=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\s14.gif")
#하트
h2=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h2.gif")
h3=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h3.gif")
h4=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h4.gif")
h5=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h5.gif")
h6=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h6.gif")
h7=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h7.gif")
h8=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h8.gif")
h9=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h9.gif")
h10=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h10.gif")
h11=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h11.gif")
h12=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h12.gif")
h13=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h13.gif")
h14=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\h14.gif")
#다이아몬드
d2=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d2.gif")
d3=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d3.gif")
d4=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d4.gif")
d5=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d5.gif")
d6=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d6.gif")
d7=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d7.gif")
d8=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d8.gif")
d9=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d9.gif")
d10=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d10.gif")
d11=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d11.gif")
d12=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d12.gif")
d13=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d13.gif")
d14=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\d14.gif")
###################
win=PhotoImage(file=r"C:\Users\spuma\OneDrive\바탕 화면\포커카드\win.gif")
def winning():
    pass

btn=Button(start)
btn.config(width=10,height=15)
btn.config(text="게임시작")
btn.config(command=gstart)
btn.config(bg="green")
btn.config(font=("Helvetica", 20, "bold"))
#btn.grid(row=1,column=0,padx=430,pady=300)
btn.pack()
button_window=start_canvas.create_window(830,100,anchor=NW, window=btn)
"""
cbtn=Button(started)
cbtn.config(width=15,height=1)
cbtn.config(text="카드만들기")
cbtn.config(command=cardmake)
cbtn.pack()
"""
"""
entry=Entry(started)

entry.pack()
"""
ubtn=Button(started)
ubtn.config(width=15,height=1)
ubtn.config(text="유저(1) 카드뽑기")
ubtn.config(font=("Helvetica", 14, "bold"))
ubtn.config(bg="brown")
ubtn.config(command=usermake)
ubtn.pack()
ubtn_window=canvas.create_window(0,450,anchor=NW, window=ubtn)

ubtn2=Button(started)
ubtn2.config(width=15,height=1)
ubtn2.config(text="유저(2) 카드뽑기")
ubtn2.config(font=("Helvetica", 14, "bold"))
ubtn2.config(bg="brown")
ubtn2.config(command=usermake2)
ubtn2.pack()
ubtn2_window=canvas.create_window(190,450,anchor=NW, window=ubtn2)

fight=Button(started)
fight.config(width=15,height=1)
fight.config(text="승패 보기")
fight.config(font=("Helvetica", 14, "bold"))
fight.config(bg="silver")
fight.config(command=finalshow)
fight.pack()
fight_window=canvas.create_window(745,420,anchor=NW, window=fight)

tryagain=Button(started)
tryagain.config(width=15,height=1)
tryagain.config(text="게임종료")
tryagain.config(font=("Helvetica", 14, "bold"))
tryagain.config(bg="red")
tryagain.config(command=endgame)
tryagain.pack()
tryagain_window=canvas.create_window(833,0,anchor=NW, window=tryagain)

restart_button=Button(started)
restart_button.config(width=15,height=1)
restart_button.config(text="Deck Shuffle")
restart_button.config(font=("Helvetica", 14, "bold"))
restart_button.config(bg="silver")
restart_button.config(command=clear_text)
restart_button.pack()
restart_window=canvas.create_window(745,320,anchor=NW, window=restart_button)

restart1_button=Button(started)
restart1_button.config(width=15,height=1)
restart1_button.config(text="재시작")
restart1_button.config(font=("Helvetica", 14, "bold"))
restart1_button.config(bg="yellow")
restart1_button.config(command=startre)
restart1_button.pack()
restart1_window=canvas.create_window(653,0,anchor=NW, window=restart1_button)

user_text=Text(started,width=35, height=10)
user_text.pack()
user_text_window=canvas.create_window(580,50,anchor=NW, window=user_text)

print_text(user_text)
"""
result=Button(started)
result.config(width=10,height=1)
result.config(text="족보 보기")
result.config(command=endshow)
result.pack()
"""

card_images ={
    'Spade' : {
        '2': s2,
        '3': s3,
        '4': s4,
        '5': s5,
        '6': s6,
        '7': s7,
        '8': s8,
        '9': s9,
        '10': s10,
        '11': s11,
        '12': s12,
        '13': s13,
        '14': s14
    },
    'Club' : {
        '2': c2,
        '3': c3,
        '4': c4,
        '5': c5,
        '6': c6,
        '7': c7,
        '8': c8,
        '9': c9,
        '10': c10,
        '11': c11,
        '12': c12,
        '13': c13,
        '14': c14
    },
    'Heart' : {
        '2': s2,
        '3': s3,
        '4': s4,
        '5': s5,
        '6': s6,
        '7': s7,
        '8': s8,
        '9': s9,
        '10': s10,
        '11': s11,
        '12': s12,
        '13': s13,
        '14': s14
    },
    'Diamond' : {
        '2': s2,
        '3': s3,
        '4': s4,
        '5': s5,
        '6': s6,
        '7': s7,
        '8': s8,
        '9': s9,
        '10': s10,
        '11': s11,
        '12': s12,
        '13': s13,
        '14': s14

    }
}
def shoot():
    global card_images
    global user1

    for i, card_info in enumerate(user1.hand):
        suit, number = card_info
        x = 100 + i * 100
        y = 100
        image_path = "C:/Users/spuma/OneDrive/바탕 화면/포커카드/{}{}.gif".format(suit[0].lower(), number)
        image = Image.open(image_path)
        card_image = ImageTk.PhotoImage(image)
        card_images[(suit, number)] = card_image
        image_item = canvas.create_image(x, y, anchor="center", image=card_image,tags="cards")
        canvas.tag_raise(image_item)
def shoot1():
    global card_images
    global user2

    for i, card_info in enumerate(user2.hand):
        suit, number = card_info
        x = 100 + i * 100
        y = 300
        image_path = "C:/Users/spuma/OneDrive/바탕 화면/포커카드/{}{}.gif".format(suit[0].lower(), number)
        image = Image.open(image_path)
        card_image = ImageTk.PhotoImage(image)
        card_images[(suit, number)] = card_image
        image_item = canvas.create_image(x, y, anchor="center", image=card_image, tags="cards")
        canvas.tag_raise(image_item)
"""
res_button=Button(started)
res_button.config(width=15,height=1)
res_button.config(text="테스트")
res_button.config(command=shoot)
res_button.pack()
res_window=canvas.create_window(200,480,anchor=NW, window=res_button)
"""

started.mainloop()
start.mainloop()
