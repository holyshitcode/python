from tkinter import *
import random
from tkinter import messagebox
import sys
class card:
    def __init__(self):
        self.mark = ['Spade', 'Club', 'Diamond', 'Heart']
        self.cardnum = ['2', '3', '4', '5', '6', '7', '8',
                                '9', '10', '11', '12', '13', '14']
        self.deck = []
        self.makedeck()
        self.shuffle()
        self.hand = []

    def makedeck(self):
        for i in self.mark:
            for j in self.cardnum:
                self.deck.append([i, j])

    def shuffle(self):
        random.shuffle(self.deck)

    def restarts(self):
        self.hand.clear()

    def dealing(self):
        for i in range(4):
            self.hand = [self.deck.pop() for i in range(4)]


class user(card):
    def __init__(self,name):
        super().__init__()
        super().dealing()
        self.name=name
        self.showcard()

    def restart(self):
        self.hand.clear()

    def showcard(self):
        print(f"{self.name}의 카드는{self.hand}")

def cardmake(): #2번째실행
    make=card()
    print("카드덱 생성완료!")
    messagebox.showinfo("안내", f""
                              f"사용자 생성시 가운데 박스에 이름을 입력해주세요!")
def gstart():  #1번째실행
    start.withdraw()
    started.deiconify()
def usermake(): #3번째실행
    global user1
    name=entry.get()
    user1=user(name)
    entry.delete(0, END)
def usermake2():
    global user2
    name = entry.get()
    user2 = user(name)
    entry.delete(0, END)



def endshow():
    print(f"1번 유저의패:{determine(user1.hand)}")
    print(f"2번 유저의패:{determine(user2.hand)}")

def straight(hand):
    hande = []
    for i in range(0, 4):
        number = hand[i][1]
        hande.append(int(number))
    hande.sort()
    if hande[0] + 1 == hande[1] and hande[1] + 1 == hande[2] and hande[2] + 1 == hande[3] and len(set(hande)) == 4:
        return True
    else:
        return False
def compare(number):
    combi = {'four of a kind': 1, 'full house': 2, 'flush': 3, 'straight': 4,
             'three of a kind': 5, 'two pair': 6, 'one pair': 7, 'high card': 8}
    return combi[number]

def determine(user):
    combi={'four of a kind':1,'straight flush':2,'flush':3,'straight':4,
                 'three of a kind':5,'two pair':6,'one pair':7,'high card':8}

    counting={}

    for item in user:
        key = item[0]
        value = item[1]
        if key in counting:
            counting[key].append(value)
        else:
            counting[key] = [value]

    for _, num in user:
        if num in counting:
            counting[num] += 1
        else:
            counting[num] = 1

    if user[0][1]==user[1][1]== user[2][1] ==user[3][1]:
        return 'four of a kind'
    elif user[0][0] == user[1][0] == user[2][0] ==user[3][0] and straight(user):
        return 'straight flush'
    elif user[0][0] == user[1][0] == user[2][0] ==user[3][0]:
        return 'flush'
    elif straight(user):
        return 'straight'
    elif 3 in counting.values():
        return 'three of a kind'
    elif list(counting.values()).count(2) == 2:
        return "two pair"
    elif 2 in counting.values():
        return "one pair"
    else:
        return "high card"

def final():
    if compare(determine(user1.hand))==compare(determine(user2.hand)):
        total1=0; total2=0
        for suit, value in user1.hand:
            if value.isdigit():
                total1 += int(value)
        for suit, value in user2.hand:
            if value.isdigit():
                total2 += int(value)
        if total1>total2:
            print("1번유저의 승리")
        else:
            print("2번유저의 승리")
    elif compare(determine(user1.hand))< compare(determine(user2.hand)):
        print("1번유저의 승리")
    else:
        print("2번유저의 승리")
def finalshow():
    ubtn.pack_forget()
    ubtn2.pack_forget()
    cbtn.pack_forget()
    entry.pack_forget()
    final()
    fight.pack_forget()

def print_text(texter):
    class printer:
        def __init__(self, text):
            self.text= text
        def write(self, str):
            self.text.insert(END,str)
    sys.stdout= printer(texter)

def restart():
    entry.delete(0, END)

    user1.restarts()
    user2.restarts()

    ubtn.pack()
    ubtn2.pack()
    cbtn.pack()
    entry.pack()
    fight.pack()

def endgame():
    started.destroy()
    start.destroy()



start=Tk()
start.geometry("1024x760")
start.title("Poker Game")
start.option_add("*Font","맑은고딕 25")

started=Tk()
started.geometry("1024x760")
started.title("Poker Game")
started.option_add("*Font","맑은고딕 25")
started.withdraw()

btn=Button(start)
btn.config(width=10,height=5)
btn.config(text="게임시작")
btn.config(command=gstart)
btn.pack()

cbtn=Button(started)
cbtn.config(width=10,height=1)
cbtn.config(text="카드만들기")
cbtn.config(command=cardmake)
cbtn.pack()

entry=Entry(started)
entry.pack()

ubtn=Button(started)
ubtn.config(width=10,height=1)
ubtn.config(text="유저(1)만들기")
ubtn.config(command=usermake)
ubtn.pack()

ubtn2=Button(started)
ubtn2.config(width=10,height=1)
ubtn2.config(text="유저(2)만들기")
ubtn2.config(command=usermake2)
ubtn2.pack()

fight=Button(started)
fight.config(width=10,height=1)
fight.config(text="승패 보기")
fight.config(command=finalshow)
fight.pack()

tryagain=Button(started)
tryagain.config(width=10,height=1)
tryagain.config(text="게임종료")
tryagain.config(command=endgame)
tryagain.pack()

user_text=Text(started,width=40, height=20)
user_text.pack()

print_text(user_text)

result=Button(started)
result.config(width=10,height=3)
result.config(text="족보 보기")
result.config(command=endshow)
result.pack()


start.mainloop()

